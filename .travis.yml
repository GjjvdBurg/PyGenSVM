# Travis CI configuration for GenSVM

matrix:
  include:
    - language: python
      dist: xenial
      sudo: required
      python: "3.7"
      services:
        - docker
      before_install:
        - sudo apt-get update
        - sudo apt-get install -y libatlas-base-dev liblapack-dev liblapacke-dev;
      env:
        - CC="gcc"
        - PYTHON="python3"
        - PIP="pip3"
        - CIBW_BEFORE_BUILD="yum install -y atlas-devel lapack-devel && pip install numpy Cython"

    - os: osx
      language: generic
      before_install:
        - brew update
        - brew install openblas
        - brew install lapack
      env:
        - CC="gcc"
          # avoids build errors on OSx
        - CFLAGS="-fcommon"
        - PYTHON="python3"
        - PIP="pip3"
        - CIBW_BEFORE_BUILD="pip install numpy Cython"

    - os: windows
      language: shell
      before_install:
        - choco install python3 --version 3.6.8 --no-progress -y
      env:
        - PATH=/c/Python36:/c/Python36/Scripts:/c/ProgramData/chocolatey/bin:$PATH
        - PYTHON="python"
        - PIP="pip"
          #- 
          #CIBW_ENVIRONMENT="LAPACK=/c/cibw/lapacke/lapacke.0.1.0/lib/native/lib/x64 
          #OPENBLAS=/c/cibw/lapacke/OpenBLAS.0.2.14.1/lib/native/"
          #- LAPACK="/c/cibw/lapacke/lapacke.0.1.0/lib"
          #- BLAS="/c/cibw/lapacke/OpenBLAS.0.2.14.1/lib"
        - CIBW_BEFORE_BUILD="git clone https://github.com/Microsoft/vcpkg.git && cd vcpkg && .\vcpkg integrate install && .\vcpkg install openblas && cd .. && pip install numpy Cython
          #- CIBW_BEFORE_BUILD="/c/cibw/nuget.exe install lapacke 
          #-OutputDirectory /cibw/lapacke -Verbosity detailed && echo && find 
          #/c/cibw/lapacke -type f -maxdepth 8 && echo && pip install numpy 
          #Cython"

env:
  global:
    # - No longer actively maintaining gensvm for Python 2.7
    # - Skipping 3.8 for now because scikit-learn is not available as wheel 
    # yet, and this breaks testing.
    - CIBW_SKIP="cp27-* cp38-*"
    # Run the unit tests on the wheels that are created
    - CIBW_TEST_COMMAND="python -VV && python -m unittest discover -f -s {project}/test"

      #install:
      #  - $PIP install numpy
      #  - $PIP install -e .[dev]
      #  - $PYTHON -m unittest discover -v -f -s ./test

script:
  - $PIP install cibuildwheel==1.0.0
  - cibuildwheel --output-dir wheelhouse
  - ls wheelhouse
